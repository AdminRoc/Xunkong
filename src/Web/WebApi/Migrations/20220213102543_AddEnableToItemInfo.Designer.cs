// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Xunkong.Web.Api.Services;

#nullable disable

namespace Xunkong.Web.Api.Migrations
{
    [DbContext(typeof(XunkongDbContext))]
    [Migration("20220213102543_AddEnableToItemInfo")]
    partial class AddEnableToItemInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Xunkong.Core.Hoyolab.DailyNoteInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurrentExpeditionNumber")
                        .HasColumnType("int");

                    b.Property<int>("CurrentHomeCoin")
                        .HasColumnType("int");

                    b.Property<int>("CurrentResin")
                        .HasColumnType("int");

                    b.Property<int>("FinishedTaskNumber")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HomeCoinRecoveryTime")
                        .HasColumnType("time(6)");

                    b.Property<bool>("IsExtraTaskRewardReceived")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxExpeditionNumber")
                        .HasColumnType("int");

                    b.Property<int>("MaxHomeCoin")
                        .HasColumnType("int");

                    b.Property<int>("MaxResin")
                        .HasColumnType("int");

                    b.Property<int>("RemainResinDiscountNumber")
                        .HasColumnType("int");

                    b.Property<int>("ResinDiscountLimitedNumber")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("ResinRecoveryTime")
                        .HasColumnType("time(6)");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TotalTaskNumber")
                        .HasColumnType("int");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DailyNote_Items");
                });

            modelBuilder.Entity("Xunkong.Core.Metadata.CharacterInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Affiliation")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarIcon")
                        .HasColumnType("longtext");

                    b.Property<string>("Birthday")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Card")
                        .HasColumnType("longtext");

                    b.Property<string>("ConstllationName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Element")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FaceIcon")
                        .HasColumnType("longtext");

                    b.Property<string>("GachaCard")
                        .HasColumnType("longtext");

                    b.Property<string>("GachaSplash")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("NameTextMapHash")
                        .HasColumnType("bigint");

                    b.Property<string>("Portrait")
                        .HasColumnType("longtext");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<string>("SideIcon")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("WeaponType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Element");

                    b.HasIndex("Gender");

                    b.HasIndex("Name");

                    b.HasIndex("NameTextMapHash");

                    b.HasIndex("Rarity");

                    b.HasIndex("WeaponType");

                    b.ToTable("Info_Character");
                });

            modelBuilder.Entity("Xunkong.Core.Metadata.ConstellationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CharacterInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Effect")
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterInfoId");

                    b.ToTable("Info_Character_Constellation");
                });

            modelBuilder.Entity("Xunkong.Core.Metadata.WeaponInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AwakenIcon")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("GachaIcon")
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("NameTextMapHash")
                        .HasColumnType("bigint");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<int>("WeaponType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Info_Weapon");
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssAvatar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvatarId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<int>("SpiralAbyssBattleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.HasIndex("Level");

                    b.HasIndex("Rarity");

                    b.HasIndex("SpiralAbyssBattleId");

                    b.ToTable("SpiralAbyss_Avatars");
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssBattle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("SpiralAbyssLevelId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("SpiralAbyssLevelId");

                    b.HasIndex("Time");

                    b.ToTable("SpiralAbyss_Battles");
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssFloor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<bool>("IsUnlock")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxStar")
                        .HasColumnType("int");

                    b.Property<string>("SettleTime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SpiralAbyssInfoId")
                        .HasColumnType("int");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Index");

                    b.HasIndex("SpiralAbyssInfoId");

                    b.HasIndex("Star");

                    b.ToTable("SpiralAbyss_Floors");
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsUnlock")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MaxFloor")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TotalBattleCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalStar")
                        .HasColumnType("int");

                    b.Property<int>("TotalWinCount")
                        .HasColumnType("int");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaxFloor");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("TotalBattleCount");

                    b.HasIndex("TotalStar");

                    b.HasIndex("TotalWinCount");

                    b.HasIndex("Uid", "ScheduleId")
                        .IsUnique();

                    b.ToTable("SpiralAbyss_Infos");
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("MaxStar")
                        .HasColumnType("int");

                    b.Property<int>("SpiralAbyssFloorId")
                        .HasColumnType("int");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpiralAbyssFloorId");

                    b.ToTable("SpiralAbyss_Levels");
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AvatarIcon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AvatarId")
                        .HasColumnType("int");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<int?>("SpiralAbyssInfo_DamageRank")
                        .HasColumnType("int");

                    b.Property<int?>("SpiralAbyssInfo_DefeatRank")
                        .HasColumnType("int");

                    b.Property<int?>("SpiralAbyssInfo_EnergySkillRank")
                        .HasColumnType("int");

                    b.Property<int?>("SpiralAbyssInfo_NormalSkillRank")
                        .HasColumnType("int");

                    b.Property<int?>("SpiralAbyssInfo_RevealRank")
                        .HasColumnType("int");

                    b.Property<int?>("SpiralAbyssInfo_TakeDamageRank")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpiralAbyssInfo_DamageRank");

                    b.HasIndex("SpiralAbyssInfo_DefeatRank");

                    b.HasIndex("SpiralAbyssInfo_EnergySkillRank");

                    b.HasIndex("SpiralAbyssInfo_NormalSkillRank");

                    b.HasIndex("SpiralAbyssInfo_RevealRank");

                    b.HasIndex("SpiralAbyssInfo_TakeDamageRank");

                    b.HasIndex("Type");

                    b.ToTable("SpiralAbyss_Ranks");
                });

            modelBuilder.Entity("Xunkong.Core.TravelRecord.TravelRecordAwardItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<string>("ActionName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("Month");

                    b.HasIndex("Time");

                    b.HasIndex("Type");

                    b.HasIndex("Uid");

                    b.HasIndex("Year");

                    b.ToTable("TravelRecord_AwardItems");
                });

            modelBuilder.Entity("Xunkong.Core.TravelRecord.TravelRecordMonthData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurrentMora")
                        .HasColumnType("int");

                    b.Property<int>("CurrentPrimogems")
                        .HasColumnType("int");

                    b.Property<int>("CurrentPrimogemsLevel")
                        .HasColumnType("int");

                    b.Property<int>("LastMora")
                        .HasColumnType("int");

                    b.Property<int>("LastPrimogems")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("MoraChangeRate")
                        .HasColumnType("int");

                    b.Property<int>("PrimogemsChangeRate")
                        .HasColumnType("int");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Year", "Month");

                    b.HasIndex("Uid", "Year", "Month")
                        .IsUnique();

                    b.ToTable("TravelRecord_MonthDatas");
                });

            modelBuilder.Entity("Xunkong.Core.TravelRecord.TravelRecordPrimogemsMonthGroupStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<string>("ActionName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<int>("TravelRecordMonthDataId")
                        .HasColumnType("int");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TravelRecordMonthDataId");

                    b.ToTable("TravelTecord_GroupStats");
                });

            modelBuilder.Entity("Xunkong.Core.Wish.WishEventInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Rank4UpItems")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rank5UpItems")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("WishType")
                        .HasColumnType("int");

                    b.Property<string>("_EndTimeString")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EndTime");

                    b.Property<string>("_StartTimeString")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("StartTime");

                    b.HasKey("Id");

                    b.HasIndex("WishType");

                    b.HasIndex("WishType", "_StartTimeString")
                        .IsUnique();

                    b.ToTable("Info_WishEvent");
                });

            modelBuilder.Entity("Xunkong.Core.Wish.WishlogAuthkeyItem", b =>
                {
                    b.Property<string>("Url")
                        .HasMaxLength(4096)
                        .HasColumnType("varchar(4096)");

                    b.Property<DateTimeOffset>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.HasKey("Url");

                    b.ToTable("Wishlog_Authkeys");
                });

            modelBuilder.Entity("Xunkong.Core.Wish.WishlogItem", b =>
                {
                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("QueryType")
                        .HasColumnType("int");

                    b.Property<int>("RankType")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WishType")
                        .HasColumnType("int");

                    b.HasKey("Uid", "Id");

                    b.HasIndex("ItemType");

                    b.HasIndex("Name");

                    b.HasIndex("QueryType");

                    b.HasIndex("RankType");

                    b.HasIndex("Time");

                    b.HasIndex("WishType");

                    b.ToTable("Wishlog_Items");
                });

            modelBuilder.Entity("Xunkong.Core.XunkongApi.DesktopChangelog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Channel")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Channel");

                    b.HasIndex("Version");

                    b.ToTable("Desktop_Changelogs");
                });

            modelBuilder.Entity("Xunkong.Core.XunkongApi.DesktopUpdateVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abstract")
                        .HasColumnType("longtext");

                    b.Property<int>("Channel")
                        .HasColumnType("int");

                    b.Property<string>("PackageUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Channel");

                    b.HasIndex("Version");

                    b.ToTable("Desktop_UpdateVersions");
                });

            modelBuilder.Entity("Xunkong.Core.XunkongApi.WallpaperInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Source")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Wallpapers");
                });

            modelBuilder.Entity("Xunkong.Web.Api.Models.BaseRecordModel", b =>
                {
                    b.Property<string>("RequestId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Channel")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ip")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("Method")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Path")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Platform")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ReturnCode")
                        .HasColumnType("int");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.Property<string>("UserAgent")
                        .HasColumnType("longtext");

                    b.Property<string>("Version")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RequestId");

                    b.HasIndex("Channel");

                    b.HasIndex("DateTime");

                    b.HasIndex("DeviceId");

                    b.HasIndex("Ip");

                    b.HasIndex("Path");

                    b.HasIndex("Platform");

                    b.HasIndex("ReturnCode");

                    b.HasIndex("StatusCode");

                    b.HasIndex("Version");

                    b.ToTable("Record_All");
                });

            modelBuilder.Entity("Xunkong.Web.Api.Models.I18nModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("de_de")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("en_us")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("es_es")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("fr_fr")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("id_id")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ja_jp")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ko_kr")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("pt_pt")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ru_ru")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("th_th")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("vi_vn")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("zh_cn")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("zh_tw")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("de_de");

                    b.HasIndex("en_us");

                    b.HasIndex("es_es");

                    b.HasIndex("fr_fr");

                    b.HasIndex("id_id");

                    b.HasIndex("ja_jp");

                    b.HasIndex("ko_kr");

                    b.HasIndex("pt_pt");

                    b.HasIndex("ru_ru");

                    b.HasIndex("th_th");

                    b.HasIndex("vi_vn");

                    b.HasIndex("zh_cn");

                    b.HasIndex("zh_tw");

                    b.ToTable("i18n");
                });

            modelBuilder.Entity("Xunkong.Web.Api.Models.NotificationServerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Channel")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MaxVersion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MinVersion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("Channel");

                    b.HasIndex("Enable");

                    b.HasIndex("MaxVersion");

                    b.HasIndex("MinVersion");

                    b.HasIndex("Platform");

                    b.HasIndex("Time");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Xunkong.Web.Api.Models.WishlogRecordModel", b =>
                {
                    b.HasBaseType("Xunkong.Web.Api.Models.BaseRecordModel");

                    b.Property<int>("CurrentCount")
                        .HasColumnType("int");

                    b.Property<int>("DeleteCount")
                        .HasColumnType("int");

                    b.Property<int>("GetCount")
                        .HasColumnType("int");

                    b.Property<string>("Operation")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PutCount")
                        .HasColumnType("int");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.HasIndex("Operation");

                    b.HasIndex("Uid");

                    b.ToTable("Record_Wishlog");
                });

            modelBuilder.Entity("Xunkong.Core.Metadata.ConstellationInfo", b =>
                {
                    b.HasOne("Xunkong.Core.Metadata.CharacterInfo", null)
                        .WithMany("Constellations")
                        .HasForeignKey("CharacterInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssAvatar", b =>
                {
                    b.HasOne("Xunkong.Core.SpiralAbyss.SpiralAbyssBattle", null)
                        .WithMany("Avatars")
                        .HasForeignKey("SpiralAbyssBattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssBattle", b =>
                {
                    b.HasOne("Xunkong.Core.SpiralAbyss.SpiralAbyssLevel", null)
                        .WithMany("Battles")
                        .HasForeignKey("SpiralAbyssLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssFloor", b =>
                {
                    b.HasOne("Xunkong.Core.SpiralAbyss.SpiralAbyssInfo", null)
                        .WithMany("Floors")
                        .HasForeignKey("SpiralAbyssInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssLevel", b =>
                {
                    b.HasOne("Xunkong.Core.SpiralAbyss.SpiralAbyssFloor", null)
                        .WithMany("Levels")
                        .HasForeignKey("SpiralAbyssFloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssRank", b =>
                {
                    b.HasOne("Xunkong.Core.SpiralAbyss.SpiralAbyssInfo", null)
                        .WithMany("DamageRank")
                        .HasForeignKey("SpiralAbyssInfo_DamageRank")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Xunkong.Core.SpiralAbyss.SpiralAbyssInfo", null)
                        .WithMany("DefeatRank")
                        .HasForeignKey("SpiralAbyssInfo_DefeatRank")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Xunkong.Core.SpiralAbyss.SpiralAbyssInfo", null)
                        .WithMany("EnergySkillRank")
                        .HasForeignKey("SpiralAbyssInfo_EnergySkillRank")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Xunkong.Core.SpiralAbyss.SpiralAbyssInfo", null)
                        .WithMany("NormalSkillRank")
                        .HasForeignKey("SpiralAbyssInfo_NormalSkillRank")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Xunkong.Core.SpiralAbyss.SpiralAbyssInfo", null)
                        .WithMany("RevealRank")
                        .HasForeignKey("SpiralAbyssInfo_RevealRank")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Xunkong.Core.SpiralAbyss.SpiralAbyssInfo", null)
                        .WithMany("TakeDamageRank")
                        .HasForeignKey("SpiralAbyssInfo_TakeDamageRank")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Xunkong.Core.TravelRecord.TravelRecordPrimogemsMonthGroupStats", b =>
                {
                    b.HasOne("Xunkong.Core.TravelRecord.TravelRecordMonthData", null)
                        .WithMany("PrimogemsGroupBy")
                        .HasForeignKey("TravelRecordMonthDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Xunkong.Web.Api.Models.WishlogRecordModel", b =>
                {
                    b.HasOne("Xunkong.Web.Api.Models.BaseRecordModel", null)
                        .WithOne()
                        .HasForeignKey("Xunkong.Web.Api.Models.WishlogRecordModel", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Xunkong.Core.Metadata.CharacterInfo", b =>
                {
                    b.Navigation("Constellations");
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssBattle", b =>
                {
                    b.Navigation("Avatars");
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssFloor", b =>
                {
                    b.Navigation("Levels");
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssInfo", b =>
                {
                    b.Navigation("DamageRank");

                    b.Navigation("DefeatRank");

                    b.Navigation("EnergySkillRank");

                    b.Navigation("Floors");

                    b.Navigation("NormalSkillRank");

                    b.Navigation("RevealRank");

                    b.Navigation("TakeDamageRank");
                });

            modelBuilder.Entity("Xunkong.Core.SpiralAbyss.SpiralAbyssLevel", b =>
                {
                    b.Navigation("Battles");
                });

            modelBuilder.Entity("Xunkong.Core.TravelRecord.TravelRecordMonthData", b =>
                {
                    b.Navigation("PrimogemsGroupBy");
                });
#pragma warning restore 612, 618
        }
    }
}
